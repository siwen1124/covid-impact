{"version":3,"sources":["components/VerticalNav.js","components/Home.js","utils/FetchAndParse.js","components/Animal.js","components/CO2.js","components/Introduction.js","components/Stock.js","utils/Scroller.js","components/ToiletPaper.js","components/Reflection.js","components/Traffic.js","App.js","index.js"],"names":["VerticalNav","props","handleClick","element","document","getElementsByClassName","console","log","id","href","onClick","className","React","Component","Home","state","imagePath","Fragment","style","height","window","innerHeight","backgroundImage","this","backgroundSize","backgroundAttachment","color","path","parseCallBack","a","d3","data","Animal","componentDidMount","svg","svgRef","current","attr","width","fetchAndParse","dataPath","parseData","then","setState","filteredData","filter","d","Year","drawSVG","map","Month","LiveOutcome","handleYearChange","selectedYear","selectedData","line","transition","duration","lineGenerator","colorScale","innerWidth","margin","left","right","top","bottom","xScale","domain","range","yScale","nice","g","append","xAxis","tickPadding","yAxis","tickSize","xAisG","call","select","remove","text","yAxisG","selectAll","x","xValue","y","yValue","curve","year","temp","handleMouseEnter","focus","focusText","handleMouseMove","event","curDatum","nx","invert","ny","Math","floor","handleMouseLeave","on","createRef","ref","type","CO2","canvas","canvasRef","context","node","getContext","draw","random","angle","PI","dis","outerRadius","innerRadius","cos","start","sin","strength","migrated","simulation","stop","tick","nodes","i","n","push","force","end","centeringStrength","alphaDecay","velocityDecay","handleTick","cycles","migrating","find","clearRect","forEach","beginPath","fillStyle","arc","fill","backgroundColor","borderRadius","display","Introduction","fontSize","src","Stock","setupData","collectData","groupData","collectDate","date","Date","rawData","priceStr","priceNum","split","nameTokens","nameStr","length","reverse","getFullYear","getDate","flat","tempArr","keys","key","target","get","item","Object","assign","stackedSeries","companyList","offset","stackGen","ticks","areaGen","y0","y1","vertical","enter","bisect","curDate","curIdx","center","curFirm","value","index","idx","Scroller","elements","container","resize","startPos","sections","each","getBoundingClientRect","sectionPositions","containerStart","scrollY","position","pos","sectionIndex","min","size","currentIndex","dispatch","prevIndex","max","prevTop","progress","getContainer","setContainer","action","callback","ToiletPaper","lastIndex","activeIndex","squareSize","squarePad","numPerRow","activateFunctions","updateFunctions","rollsRaw","Country","Rolls","init","setupVis","setupOverallIncrease","setupInvention","setupGrid","setupBarChart","setupHistogram","setupScroller","setupSections","wordData","getWords","fillerWords","getFillerWords","generateRolls","selection","svgEntry","merge","countryList","squares","rollsProcessed","squaresE","classed","colors","changeColorScale","xHistScale","xAxisHist","scale","histData","getOtherHist","histMax","yHistScale","hist","histE","x0","x1","scroller","curIndex","activate","update","vis","querySelector","measure","flexContainer","targetStart","offsetTop","targetEnd","offsetHeight","rect","virtualElement","createElement","parseInt","addEventListener","makeStick","curTop","curBot","hasStick","classList","contains","add","parentNode","insertBefore","removeChild","showTitle","showInventionImg","showSquares","expandGrid","highlightGrid","showHistPart","showHistAll","showCough","showNothing","updateCough","dir","filler","time","col","row","count","j","thresholds","bin","groupByWord","words","d3Collection","word","rollup","v","entries","sort","b","delay","hideAxis","showAxis","axis","marginTop","marginLeft","marginRight","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.496fd1e8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class VerticalNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handleClick = () => {\r\n    const element = document.getElementsByClassName(\"animal\");\r\n    console.log(element);\r\n    // element.scrollToIntoView();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"cd-vertical-nav\">\r\n        <ul>\r\n          <li>\r\n            <a href=\"#home\" onClick={() => this.handleClick()}>\r\n              <span className=\"cd-dot\"></span>\r\n              <span className=\"cd-label\">Home</span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#introduction\">\r\n              <span className=\"cd-dot\"></span>\r\n              <span className=\"cd-label\">Introduction</span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#toilet\">\r\n              <span className=\"cd-dot\"></span>\r\n              <span className=\"cd-label\">Toilet Paper</span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#stock\">\r\n              <span className=\"cd-dot\"></span>\r\n              <span className=\"cd-label\">Stock</span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#animal\">\r\n              <span className=\"cd-dot\"></span>\r\n              <span className=\"cd-label\">Animal Adoption</span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#co2\">\r\n              <span className=\"cd-dot\"></span>\r\n              <span className=\"cd-label\">CO2</span>\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#reflection\">\r\n              <span className=\"cd-dot\"></span>\r\n              <span className=\"cd-label\">Reflection</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { index } from \"d3-array\";\r\nimport React from \"react\";\r\n\r\nexport default class Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.imagePath = \"image/doctor.jpg\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"home container-fluid\"\r\n          id=\"home\"\r\n          style={{\r\n            height: window.innerHeight,\r\n            backgroundImage: `url(${this.imagePath})`,\r\n            backgroundSize: \"cover\",\r\n            backgroundAttachment: \"fixed\",\r\n            color: \"black\",\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h1>Issues with Tissues</h1>\r\n              <p>\r\n                The COVID-19 pandemic and resulting economic crisis had an\r\n                impact on almost every aspect of our life, including household\r\n                items, stock, gas, how we work, how we live, among many other\r\n                things. The question of this research trying to ask is:\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <h3>Are they all bad effects? </h3>\r\n              </p>\r\n              <p id=\"credit\">photo credit @Bryan Vectorartist</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import * as d3 from \"d3\";\r\n\r\nexport default async function fetchAndParse(path, parseCallBack) {\r\n  const data = await d3.csv(path);\r\n  return parseCallBack(data);\r\n}\r\n","import * as d3 from \"d3\";\r\nimport React from \"react\";\r\nimport fetchAndParse from \"../utils/FetchAndParse.js\";\r\n\r\nexport default class Animal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataPath: `./data/animal/national_shelter_count_all.csv`,\r\n      data: [],\r\n    };\r\n\r\n    this.svgRef = React.createRef();\r\n    this.width = window.innerWidth / 2;\r\n    this.height = window.innerHeight / 2;\r\n    console.log(this.height);\r\n    this.margin = { top: 60, right: 40, bottom: 90, left: 100 };\r\n\r\n    this.line = null;\r\n    this.lineGenerator = null;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const svg = d3.select(this.svgRef.current);\r\n    svg.attr(\"width\", this.width).attr(\"height\", this.height);\r\n\r\n    fetchAndParse(this.state.dataPath, this.parseData).then((data) => {\r\n      this.setState({ data });\r\n      const filteredData = data.filter((d) => d.Year === 2020);\r\n      this.drawSVG(filteredData, svg);\r\n    });\r\n  };\r\n\r\n  parseData = (data) => {\r\n    return data.map((d) => {\r\n      return {\r\n        Year: +d.Year,\r\n        Month: +d.Month,\r\n        LiveOutcome: +d.LiveOutcome,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleYearChange = (selectedYear) => {\r\n    const selectedData = this.state.data.filter((d) => d.Year === selectedYear);\r\n    this.line\r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"d\", this.lineGenerator(selectedData))\r\n      .style(\"stroke\", this.colorScale(selectedYear));\r\n  };\r\n\r\n  drawSVG = (data, svg) => {\r\n    // accessor\r\n    const xValue = (d) => d.Month;\r\n    const xAxisLabel = \"Month\";\r\n\r\n    const yValue = (d) => d.LiveOutcome;\r\n    const yAxisLabel = \"Adoption Count\";\r\n\r\n    // frame\r\n    const innerWidth = this.width - this.margin.left - this.margin.right;\r\n    const innerHeight = this.height - this.margin.top - this.margin.bottom;\r\n\r\n    // scales\r\n    // const months = this.state.data.map((d) => d.Date.getMonth());\r\n    const xScale = d3.scaleLinear().domain([1, 12]).range(\r\n      // (() => {\r\n      //   let arr = [];\r\n      //   for (let i = 0; i < 12; i++) arr.push(i * 60);\r\n      //   return arr;\r\n      // })()\r\n      [0, innerWidth]\r\n    );\r\n\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 400000])\r\n      .range([innerHeight, 0])\r\n      .nice();\r\n\r\n    this.colorScale = d3.scaleOrdinal().domain([2017, 2018, 2019, 2020]).range([\r\n      \"#FCECDD\", // blue-green\r\n      \"#FFC288\", // dark pink\r\n      \"#FEA82F\", // light blue\r\n      \"#FF6701\", // light purple\r\n    ]);\r\n\r\n    // transformation\r\n    this.g = svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${this.margin.left}, ${this.margin.top})`);\r\n\r\n    // tick\r\n    const xAxis = d3.axisBottom(xScale).tickPadding(15);\r\n    const yAxis = d3.axisLeft(yScale).tickSize(-innerWidth).tickPadding(15);\r\n\r\n    // xAxis and yAxis\r\n    const xAisG = this.g\r\n      .append(\"g\")\r\n      .call(xAxis)\r\n      .attr(\"transform\", `translate(0, ${innerHeight})`);\r\n    xAisG.select(\".domain\").remove();\r\n    xAisG\r\n      .append(\"text\")\r\n      .attr(\"class\", \"bg-primary\")\r\n      .attr(\"y\", 60)\r\n      .attr(\"x\", innerWidth / 2)\r\n      .attr(\"fill\", \"#d8d8d8\")\r\n      .style(\"font-size\", \"15px\")\r\n      .text(xAxisLabel);\r\n\r\n    const yAxisG = this.g.append(\"g\").call(yAxis);\r\n    yAxisG.selectAll(\".domain\").remove();\r\n    yAxisG\r\n      .append(\"text\")\r\n      .attr(\"class\", \"bg-primary\")\r\n      .attr(\"y\", -70)\r\n      .attr(\"x\", -innerHeight / 2)\r\n      .attr(\"fill\", \"#d8d8d8\")\r\n      .attr(\"transform\", `rotate(-90)`)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .style(\"font-size\", \"15px\")\r\n      .text(yAxisLabel);\r\n\r\n    console.log(xScale(11));\r\n    // drawing line\r\n    this.lineGenerator = d3\r\n      .line()\r\n      .x((d) => xScale(xValue(d)))\r\n      .y((d) => yScale(yValue(d)))\r\n      .curve(d3.curveNatural);\r\n\r\n    for (let year = 2017; year <= 2020; year++) {\r\n      const temp = this.state.data.filter((d) => d.Year === year);\r\n      this.g\r\n        .append(\"path\")\r\n        .attr(\"class\", \"line-path\")\r\n        .attr(\"id\", `${year}`)\r\n        .style(\"stroke\", this.colorScale(year))\r\n        .style(\"opacity\", 0.3)\r\n        .style(\"stroke-width\", 2)\r\n        .attr(\"d\", this.lineGenerator(temp));\r\n    }\r\n\r\n    this.handleMouseEnter = () => {\r\n      focus.style(\"visibility\", \"visible\");\r\n      focusText.style(\"opacity\", 1);\r\n    };\r\n\r\n    this.handleMouseMove = (event, curDatum) => {\r\n      const [x, y] = d3.pointer(event);\r\n      const nx = xScale.invert(x);\r\n      const ny = yScale.invert(y);\r\n      focus.style(\"opacity\", 1).attr(\"cx\", xScale(nx)).attr(\"cy\", yScale(ny));\r\n      focusText\r\n        .text(`Count: ${Math.floor(ny)}`)\r\n        .attr(\"x\", xScale(nx) + 30)\r\n        .attr(\"y\", yScale(ny))\r\n        .style(\"stroke\", \"white\");\r\n    };\r\n\r\n    this.handleMouseLeave = () => {\r\n      focus.style(\"visibility\", \"hidden\");\r\n      focusText.style(\"opacity\", 0);\r\n    };\r\n\r\n    // this.g\r\n    //   .on(\"mouseenter\", this.handleMouseEnter)\r\n    //   .on(\"mousemove\", this.handleMouseMove)\r\n    //   .on(\"mouseleave\", this.handleMouseLeave);\r\n\r\n    const line = this.g\r\n      .append(\"path\")\r\n      .attr(\"class\", \"line-path highlight\")\r\n      .attr(\"id\", `${data[0].Year}`)\r\n      .attr(\"d\", this.lineGenerator(data))\r\n      .style(\"stroke\", this.colorScale(data[0].Year))\r\n      .style(\"stroke-width\", 3)\r\n      .on(\"mouseenter\", this.handleMouseEnter)\r\n      .on(\"mousemove\", this.handleMouseMove)\r\n      .on(\"mouseleave\", this.handleMouseLeave);\r\n\r\n    const focus = this.g\r\n      .append(\"circle\")\r\n      .attr(\"r\", 10)\r\n      .style(\"visibility\", \"hidden\")\r\n      .style(\"fill\", \"none\")\r\n      .style(\"stroke\", \"white\");\r\n\r\n    const focusText = this.g\r\n      .append(\"text\")\r\n      .style(\"opacity\", 0)\r\n      .style(\"text-anchor\", \"left\")\r\n      .style(\"alignment-baseline\", \"middle\");\r\n\r\n    // hold a ref to these so that we only update line when new data kicks in\r\n    this.line = line;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"animal container-fluid d-flex align-items-center\"\r\n        id=\"animal\"\r\n        style={{\r\n          height: window.innerHeight,\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-7\">\r\n            <svg ref={this.svgRef}></svg>\r\n          </div>\r\n          <div className=\"col-5\">\r\n            <h1>Animal Adoption</h1>\r\n            <div className=\"btn-group btn-group-sm btn-group-toggle d-flex\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-light\"\r\n                onClick={() => this.handleYearChange(2017)}\r\n              >\r\n                Year 2017\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-light\"\r\n                onClick={() => this.handleYearChange(2018)}\r\n              >\r\n                Year 2018\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-light\"\r\n                onClick={() => this.handleYearChange(2019)}\r\n              >\r\n                Year 2019\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-light\"\r\n                onClick={() => this.handleYearChange(2020)}\r\n              >\r\n                Year 2020\r\n              </button>\r\n            </div>\r\n            <p className=\"text-justify mt-2\">\r\n              During the pandemic burst in 2020, we see more and more pets being\r\n              adopted. One would find it was very hard to adopt a pet from a\r\n              shelter. Was it truly having more adoptions? or was it just\r\n              because the available pets were adopted a lot faster than before\r\n              so that it created an illusion that more pets were adopted?\r\n              <br />\r\n              <br />\r\n            </p>\r\n            <br />\r\n            <br />\r\n            <h4 className=\"text-center\"> The answer is latter</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/*\r\nref: \r\nhttps://bl.ocks.org/Andrew-Reid/aa5d4329d7e85075391e003c09c8283d \r\nhttps://stackoverflow.com/questions/54344073/how-to-achieve-disc-shape-in-d3-force-simulation\r\nhttps://www.theguardian.com/us-news/ng-interactive/2017/dec/20/bussed-out-america-moves-homeless-people-country-studys\r\n*/\r\n\r\nimport React from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport default class CO2 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.canvasRef = React.createRef();\r\n    this.width = (window.innerWidth * 3) / 4;\r\n    this.height = window.innerWidth / 3;\r\n    this.context = null;\r\n\r\n    this.nodes = [];\r\n    this.strength = -0.25; // default repulsion\r\n    this.centeringStrength = 0.01; // power of centering force for two clusters\r\n    this.velocityDecay = 0.15; // velocity decay: higher value, less overshooting\r\n    this.outerRadius = this.height / 2; // new nodes within this radius\r\n    this.innerRadius = (1 / 3) * this.outerRadius; // new nodes outside this radius, initial nodes within.\r\n    this.start = [this.width / 4, this.height / 2]; // new nodes/initial nodes center point\r\n    this.end = [this.width * (3 / 4), this.height / 2]; // destination center\r\n    this.n = 1000; // number of initial nodes\r\n    this.cycles = 100; // number of ticks before stopping.\r\n    this.tick = 0;\r\n    this.simulation = null;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const canvas = d3.select(this.canvasRef.current);\r\n    canvas.attr(\"width\", this.width).attr(\"height\", this.height);\r\n    this.context = canvas.node().getContext(\"2d\");\r\n    this.draw();\r\n  };\r\n\r\n  // create a random node\r\n  random = () => {\r\n    const angle = Math.random() * Math.PI * 2;\r\n    const dis =\r\n      Math.random() * (this.outerRadius - this.innerRadius) + this.innerRadius;\r\n    const x = Math.cos(angle) * dis + this.start[0];\r\n    const y = Math.sin(angle) * dis + this.start[1];\r\n\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      strength: this.strength,\r\n      migrated: false,\r\n    };\r\n  };\r\n\r\n  draw = () => {\r\n    // clean-up\r\n    if (this.simulation != null) {\r\n      this.simulation.stop();\r\n      this.simulation = null;\r\n    }\r\n    this.tick = 0;\r\n    this.nodes = [];\r\n\r\n    // init\r\n    for (let i = 0; i < this.n; i++) {\r\n      this.nodes.push(this.random());\r\n    }\r\n\r\n    // create simulation\r\n    this.simulation = d3\r\n      .forceSimulation()\r\n      .force(\r\n        \"charge\",\r\n        d3.forceManyBody().strength((d) => d.strength)\r\n      )\r\n      .force(\r\n        \"x\",\r\n        d3\r\n          .forceX()\r\n          .x((d) => (d.migrated ? this.end[0] : this.start[0]))\r\n          .strength(this.centeringStrength)\r\n      )\r\n      .force(\r\n        \"y\",\r\n        d3\r\n          .forceY()\r\n          .y((d) => (d.migrated ? this.end[1] : this.start[1]))\r\n          .strength(this.centeringStrength)\r\n      )\r\n      .alphaDecay(0)\r\n      .velocityDecay(this.velocityDecay)\r\n      .nodes(this.nodes)\r\n      .on(\"tick\", this.handleTick);\r\n  };\r\n\r\n  handleTick = () => {\r\n    // stop condition\r\n    if (this.tick > 300) {\r\n      this.simulation.stop();\r\n      this.simulation = null;\r\n      console.log(\"hit\");\r\n      return;\r\n    }\r\n\r\n    // update tick and nodes\r\n    this.tick++;\r\n    this.simulation.nodes(this.nodes);\r\n    if (this.tick <= this.cycles) {\r\n      const migrating = this.simulation.find(\r\n        (Math.random() - 0.5) * 50 + this.start[0],\r\n        (Math.random() - 0.5) * 50 + this.start[1],\r\n        10\r\n      );\r\n      if (migrating) migrating.migrated = true;\r\n    }\r\n\r\n    // clear canvas and draw updated dot\r\n    this.context.clearRect(0, 0, this.width, this.height);\r\n    this.nodes.forEach((d) => {\r\n      this.context.beginPath();\r\n      this.context.fillStyle = d.migrated ? \"#75d1f3\" : \"orange\";\r\n      this.context.arc(d.x, d.y, 2, 0, Math.PI * 2);\r\n      this.context.fill();\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.draw();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"co2 container-fluid d-flex align-items-center \"\r\n        id=\"co2\"\r\n        style={{\r\n          height: window.innerHeight,\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h1 className=\"\">CO2 change</h1>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <p className=\"text-justify\">\r\n              The COVID-19 pandemic and resulting economic crisis had an impact\r\n              on almost every aspect of how energy is produced, supplied, and\r\n              consumed around the world. The pandemic defined energy and\r\n              emissions trends in 2020 – it drove down fossil fuel consumption\r\n              for much of the year, whereas renewables and electric vehicles,\r\n              two of the main building blocks of clean energy transitions, were\r\n              largely immune. As primary energy demand dropped nearly{\" \"}\r\n              <span>4%</span> in 2020, global energy-related CO2 emissions fell\r\n              by <span>5.8%</span> according to the latest statistical data, the\r\n              largest annual percentage decline since World War II.\r\n              <br />\r\n              <br />\r\n              In absolute terms, the decline in emissions CO2 is without\r\n              precedent in human history – broadly speaking, this is the\r\n              equivalent of removing all of the European Union’s emissions from\r\n              the global total.\r\n            </p>\r\n            <br />\r\n            <br />\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-light\"\r\n              onClick={this.handleClick}\r\n            >\r\n              play / replay\r\n            </button>\r\n          </div>\r\n          <div className=\"col-8\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 d-flex align-items-center justify-content-center\">\r\n                <span\r\n                  style={{\r\n                    height: 15,\r\n                    width: 15,\r\n                    backgroundColor: \"orange\",\r\n                    borderRadius: \"50%\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                ></span>\r\n                <span>\r\n                  &nbsp; &nbsp; &nbsp;if one dot is representing 3 tons of CO2\r\n                </span>\r\n              </div>\r\n              <canvas className=\"col-12\" ref={this.canvasRef}></canvas>\r\n              <div className=\"col-6\">\r\n                <h5 className=\"mx-auto\">CO2 emissions in 2019</h5>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <h5 className=\"mx-auto\">CO2 emissions decreased in 2020</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// ref: https://www.pewresearch.org/2021/03/05/in-their-own-words-americans-describe-the-struggles-and-silver-linings-of-the-covid-19-pandemic/\r\nimport React from \"react\";\r\n\r\nexport default class Introduction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.imagePath = \"image/activity.jpg\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"introduction container-fluid d-flex align-items-center\"\r\n        id=\"introduction\"\r\n        style={{\r\n          height: window.innerHeight,\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h1 className=\"text-left\" style={{ fontSize: \"4em\" }}>\r\n              Introduction\r\n            </h1>\r\n          </div>\r\n          <div className=\"col-6 text-justify\">\r\n            <p>\r\n              The past year has transformed nearly every aspect of our world.\r\n              Seemingly overnight, the quirky became mundane. Meanwhile, our\r\n              friends, family, colleagues, and communities have had their lives\r\n              changed in critical ways that promise to have much longer-lasting\r\n              effects. Living through a global pandemic has driven dramatic\r\n              shifts in our jobs, eating habits, childcare, and even our\r\n              collective sense of time. Virtually no one has been left untouched\r\n              after 12 months of such dramatic disruption. A generous dose of\r\n              empathy and understanding of that truth will make us all stronger\r\n              as we rebuild and remake our world in the year ahead.\r\n            </p>\r\n            <br />\r\n            <p>\r\n              Pew Research Center has been asking survey questions over the past\r\n              year about Americans’ views and reactions to the COVID-19\r\n              pandemic. In August, they gave the public a chance to tell in\r\n              their own words how the pandemic has affected them in their\r\n              personal lives. According to the report, the vast majority of\r\n              Americans <span>(89%)</span> mentioned at least one negative\r\n              change in their own lives, while a smaller share\r\n              <span>(73%)</span> mentioned at least one unexpected upside. Most\r\n              have experienced these negative impacts and silver linings\r\n              simultaneously: Two-thirds <span>(67%)</span> of Americans\r\n              mentioned at least one negative and at least one positive change\r\n              since the pandemic began.\r\n            </p>\r\n            <br />\r\n            <p>\r\n              Obviously, the impact of COVID-19 is mixed with bad and good\r\n              things. This research will revisit such influence in data format\r\n              from many facets in order to see how COVID-19 changed our life.\r\n            </p>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <img src={`${this.imagePath}`} style={{ width: \"100%\" }} />\r\n            <p className=\"text-right\" id=\"credit\">\r\n              photo credit @MUTI\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/*\r\nref: http://bl.ocks.org/WillTurman/4631136\r\n*/\r\nimport React from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport default class Stock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n\r\n    this.svgRef = React.createRef();\r\n    this.margin = { top: 30, right: 0, bottom: 30, left: 0 };\r\n    this.width = window.innerWidth;\r\n    this.height = 680;\r\n\r\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\r\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\r\n\r\n    this.dataPath = [];\r\n    this.companyList = [\r\n      \"Delta\",\r\n      \"Moderna\",\r\n      \"ExxonMobil\",\r\n      \"Nordstrom\",\r\n      \"Disney\",\r\n      \"Uber\",\r\n      \"Netflix\",\r\n      \"Boeing\",\r\n      \"Chewy\",\r\n      \"Zillow\",\r\n      \"Zoom\",\r\n      \"Facebook\",\r\n      \"Tesla\",\r\n      \"Google\",\r\n      \"Amazon\",\r\n    ];\r\n\r\n    this.companyList.forEach((element) => {\r\n      this.dataPath.push(`./data/stock/${element}.csv`);\r\n    });\r\n\r\n    this.data = [];\r\n    this.date = [];\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    await this.setupData();\r\n    this.draw();\r\n  };\r\n\r\n  setupData = async () => {\r\n    await this.collectData();\r\n    this.groupData();\r\n    this.collectDate();\r\n  };\r\n\r\n  collectDate = () => {\r\n    this.data.forEach((d) => this.date.push({ Date: d.Date }));\r\n  };\r\n\r\n  collectData = async () => {\r\n    for (let i = 0; i < this.dataPath.length; i++) {\r\n      let rawData = await d3.csv(this.dataPath[i]);\r\n      rawData = rawData.map((d) => {\r\n        let priceStr = d[\"Close/Last\"];\r\n        console.log(priceStr);\r\n        let priceTokens = priceStr.split(\"$\");\r\n        let priceNum = +priceTokens[1];\r\n        let nameTokens = this.dataPath[i].split(\"/\");\r\n        nameTokens = nameTokens[nameTokens.length - 1].split(\".\");\r\n        let nameStr = nameTokens[0];\r\n        return {\r\n          Date: new Date(d.Date),\r\n          [nameStr]: priceNum,\r\n        };\r\n      });\r\n      rawData.reverse(); // reverse date order\r\n      rawData = rawData.filter((d) => {\r\n        return d.Date.getFullYear() === 2020 && d.Date.getDate() % 3 === 0; // % 3 to smooth out data\r\n      });\r\n      this.data.push(rawData);\r\n    }\r\n  };\r\n\r\n  groupData = () => {\r\n    const map = d3.group(this.data.flat(), (d) => d.Date);\r\n    let tempArr = [];\r\n    for (let key of map.keys()) {\r\n      let target = {};\r\n      map.get(key).forEach((item) => {\r\n        Object.assign(target, item);\r\n      });\r\n      tempArr.push(target);\r\n    }\r\n    this.data = tempArr;\r\n  };\r\n\r\n  draw = () => {\r\n    // data\r\n    const stackGen = d3\r\n      .stack()\r\n      .keys(this.companyList)\r\n      .offset(d3.stackOffsetWiggle);\r\n    const stackedSeries = stackGen(this.data);\r\n\r\n    // svg\r\n    const svg = d3.select(this.svgRef.current);\r\n    svg.attr(\"width\", this.width).attr(\"height\", this.height);\r\n    const g = svg\r\n      .append(\"g\")\r\n      .attr(\r\n        \"transform\",\r\n        `translate(${this.margin.left}, ${this.margin.top + 100})`\r\n      );\r\n\r\n    // scale\r\n    const xScale = d3\r\n      .scaleTime()\r\n      .domain([new Date(2020, 0, 1), new Date(2020, 12, 1)])\r\n      .range([0, this.innerWidth])\r\n      .nice();\r\n    const yScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 4000])\r\n      .range([0, this.height / 3]);\r\n    const colorScale = d3.scaleOrdinal().domain(this.companyList).range([\r\n      // \"#ab2668\", // purple\r\n      // \"#ef3f5d\", // light-red\r\n      // \"#00aaa9\", // green-blue\r\n      // \"#bfc0c2\", // light-grey\r\n      // \"#fcf001\", // light-yellow\r\n      // \"#c2272d\", // dark red\r\n      // \"#c9da29\", // blue-yellow\r\n      \"#03a7c1\", // blue-green\r\n      \"#be1a8b\", // dark pink\r\n      \"#75d1f3\", // light blue\r\n      \"#7f65aa\", // light purple\r\n      \"#01aef0\", // blue\r\n      \"#ed0477\", // pink\r\n      \"#5d2d91\", // dark purple\r\n      \"#84bc41\", // light green\r\n      \"#01954e\", // green\r\n      \"#ffc60e\", // yellow\r\n      \"#94238e\", // purple\r\n      \"#ec6aa0\", // light pink\r\n      \"#d71b32\", // red\r\n      \"#f69324\", // orange\r\n      \"#015aaa\", // blue\r\n    ]);\r\n\r\n    // axis\r\n    const xAxis = d3\r\n      .axisBottom(xScale)\r\n      .ticks(d3.timeWeek)\r\n      .tickPadding(15)\r\n      .tickSize(1);\r\n\r\n    // draw\r\n    const areaGen = d3\r\n      .area()\r\n      .x((d) => xScale(d.data.Date))\r\n      .y0((d) => yScale(d[0]))\r\n      .y1((d) => yScale(d[1]))\r\n      .curve(d3.curveBasis);\r\n\r\n    const vertical = d3\r\n      .select(\"#vertical\")\r\n      .style(\"position\", \"absolute\")\r\n      .style(\"z-index\", 20)\r\n      .style(\"width\", \"1px\")\r\n      .style(\"height\", `${this.height - this.margin.bottom}px`)\r\n      .style(\"background\", \"#fff\")\r\n      .style(\"visibility\", \"hidden\");\r\n\r\n    g.selectAll(\"path\")\r\n      .data(stackedSeries)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"d\", areaGen)\r\n      .attr(\"fill\", (d, i) => colorScale(d.key));\r\n    const xAisG = g\r\n      .append(\"g\")\r\n      .attr(\"class\", \"xAxis\")\r\n      .attr(\"transform\", `translate(0, ${this.innerHeight - 250})`)\r\n      .call(xAxis);\r\n    xAisG.select(\".domain\").remove();\r\n\r\n    this.handleMouseMove = (event, curDatum) => {\r\n      const [x, y] = d3.pointer(event);\r\n      svg.selectAll(\"#tooltip\").remove();\r\n\r\n      const bisect = d3.bisector((d) => d.Date);\r\n      const curDate = xScale.invert(x);\r\n      const curIdx = bisect.center(this.date, curDate);\r\n      const curFirm = curDatum.key;\r\n      const value = this.data[curIdx][curFirm];\r\n\r\n      svg\r\n        .append(\"text\")\r\n        .attr(\"x\", x)\r\n        .attr(\"y\", y + 100)\r\n        .attr(\"id\", \"tooltip\")\r\n        .style(\"fill\", \"white\")\r\n        .style(\"font-weight\", \"bold\")\r\n        .style(\"font-size\", \"20px\")\r\n        .text(`${curFirm} $${value}`);\r\n\r\n      vertical.style(\"left\", `${x + 10}px`).style(\"visibility\", \"visible\");\r\n    };\r\n\r\n    g.selectAll(\"path\")\r\n      .attr(\"opacity\", 1)\r\n      .on(\"mouseenter\", handleMouseEnter)\r\n      .on(\"mousemove\", this.handleMouseMove)\r\n      .on(\"mouseleave\", handleMouseLeave);\r\n\r\n    // helper functions\r\n    // function stackMax(layers) {\r\n    //   return d3.max(layers, (d) => d[1]);\r\n    // }\r\n\r\n    // function stackMin(layers) {\r\n    //   return d3.min(layers, (d) => d[0]);\r\n    // }\r\n\r\n    function handleMouseEnter(event, curDatum) {\r\n      let curIdx = curDatum.index;\r\n      g.selectAll(\"path\")\r\n        .transition()\r\n        .duration(0)\r\n        .attr(\"opacity\", (d, idx) => (idx !== curIdx ? 0.2 : 1));\r\n    }\r\n\r\n    function handleMouseLeave(event, curDatum) {\r\n      g.selectAll(\"path\").transition().duration(250).attr(\"opacity\", 1);\r\n      svg.selectAll(\"#tooltip\").remove();\r\n\r\n      vertical.style(\"visibility\", \"hidden\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"stock container-fluid\"\r\n        id=\"stock\"\r\n        style={{\r\n          height: window.innerHeight,\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-5\">\r\n            <h1>Stock</h1>\r\n            <p className=\"text-justify\">\r\n              February 19, 2020, marked the stock market peak before the\r\n              outbreak of the COVID-19 pandemic triggered a freefall in share\r\n              prices. In the year since, the world has changed, transforming our\r\n              lives, our economies, and the fortunes of our businesses—an\r\n              unfolding journey that is reflected in the ups and downs of share\r\n              prices. The fundamental trends have accelerated, propelling some\r\n              companies forward at record speed while for others headwinds have\r\n              turned into hurricanes.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-full\">\r\n          <div className=\"col\">\r\n            <div id=\"vertical\"></div>\r\n            <svg ref={this.svgRef}></svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * ref:\r\n * https://github.com/vlandham/scroll_demo/blob/gh-pages/js/scroller.js\r\n * https://vallandingham.me/think_you_can_scroll.html\r\n */\r\nimport * as d3 from \"d3\";\r\n\r\nexport default class Scroller {\r\n  /**\r\n   * Sets up scroller to monitor scrolling of els selection.\r\n   * @param elements - d3 selection of elements that will be scrolled through by user.\r\n   * @param container - d3 selection of container that contains section + visualization area\r\n   */\r\n  constructor(elements, container) {\r\n    this.container = container;\r\n    this.sections = elements;\r\n\r\n    this.sectionPositions = [];\r\n    this.currentIndex = -1;\r\n    this.containerStart = 0;\r\n\r\n    this.dispatch = d3.dispatch(\"active\", \"progress\");\r\n\r\n    // .scroller namespace\r\n    d3.select(window)\r\n      .on(\"scroll.scroller\", this.position)\r\n      .on(\"resize.scroller\", this.resize);\r\n\r\n    // manually call resize initially to setup scroller.\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * resize - called initially and also when page is resized.\r\n   * Resets the sectionPositions\r\n   */\r\n  resize = () => {\r\n    // sectionPositions will be each sections starting position relative to the top of the first section.\r\n    let startPos;\r\n    this.sections.each((d, i, nodes) => {\r\n      let top = nodes[i].getBoundingClientRect().top;\r\n      if (i === 0) startPos = top;\r\n      this.sectionPositions.push(top - startPos);\r\n    });\r\n    // container's relative pos to viewport + the absolute pos of viewport in document\r\n    this.containerStart =\r\n      this.container.node().getBoundingClientRect().top + window.scrollY;\r\n  };\r\n\r\n  /**\r\n   * position - get current users position. if user has scrolled to new section, dispatch active event with new section index.\r\n   */\r\n  position = () => {\r\n    let pos = window.scrollY - 10 - this.containerStart;\r\n    let sectionIndex = d3.bisect(this.sectionPositions, pos);\r\n    sectionIndex = Math.min(this.sections.size() - 1, sectionIndex);\r\n    console.log(sectionIndex);\r\n    if (this.currentIndex !== sectionIndex) {\r\n      this.dispatch.call(\"active\", this, sectionIndex);\r\n      this.currentIndex = sectionIndex;\r\n    }\r\n    let prevIndex = Math.max(sectionIndex - 1, 0);\r\n    let prevTop = this.sectionPositions[prevIndex];\r\n    let progress =\r\n      (pos - prevTop) / (this.sectionPositions[sectionIndex] - prevTop);\r\n    this.dispatch.call(\"progress\", this, this.currentIndex, progress);\r\n  };\r\n\r\n  getContainer = () => {\r\n    return this.container;\r\n  };\r\n\r\n  setContainer = (container) => {\r\n    this.container = container;\r\n  };\r\n\r\n  // implements a .on method to pass in a callback to the dispatcher.\r\n  on = (action, callback) => {\r\n    this.dispatch.on(action, callback);\r\n  };\r\n}\r\n","/*\r\nref: https://github.com/vlandham/scroll_demo\r\nhttps://vallandingham.me/think_you_can_scroll.html\r\nhttps://github.com/vlandham/scroll_demo/blob/gh-pages/post.md\r\nhttps://lancecourse.com/howto/the-science-of-creating-fixed-components-on-scroll-with-vanilla-javascript\r\n*/\r\nimport React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport * as d3Collection from \"d3-collection\";\r\nimport Scroller from \"../utils/Scroller\";\r\n\r\nexport default class ToiletPaper extends React.Component {\r\n  width = window.innerWidth / 3;\r\n  height = this.width;\r\n  margin = { top: 10, left: 10, bottom: 10, right: 10 };\r\n  lastIndex = -1;\r\n  activeIndex = 0;\r\n\r\n  squareSize = window.innerWidth / 198;\r\n  squarePad = this.squareSize;\r\n  numPerRow = this.width / (this.squareSize + this.squarePad);\r\n\r\n  svg = null;\r\n  g = null;\r\n\r\n  activateFunctions = [];\r\n  updateFunctions = [];\r\n\r\n  // data: https://www.statista.com/chart/15676/cmo-toilet-paper-consumption/\r\n  rollsRaw = [\r\n    { Country: \"US\", Rolls: 141 },\r\n    { Country: \"Germany\", Rolls: 134 },\r\n    { Country: \"UK\", Rolls: 127 },\r\n    { Country: \"Japan\", Rolls: 91 },\r\n    { Country: \"Australia\", Rolls: 88 },\r\n    { Country: \"Spain\", Rolls: 81 },\r\n    { Country: \"France\", Rolls: 71 },\r\n    { Country: \"Italy\", Rolls: 70 },\r\n    { Country: \"China\", Rolls: 49 },\r\n    { Country: \"Brazil\", Rolls: 38 },\r\n  ];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    d3.tsv(\"./data/words.tsv\").then((data) => {\r\n      this.init(data);\r\n    });\r\n  };\r\n\r\n  //#region initialization\r\n\r\n  /**\r\n   * called once data has been loaded.\r\n   * @param rawData - loaded tsv data\r\n   */\r\n  init = (rawData) => {\r\n    this.setupData(rawData);\r\n\r\n    this.setupVis(d3.select(\"#vis\"));\r\n    this.setupOverallIncrease();\r\n    this.setupInvention();\r\n    this.setupGrid();\r\n    this.setupBarChart();\r\n    this.setupHistogram();\r\n\r\n    this.setupScroller();\r\n    this.setupSections();\r\n  };\r\n\r\n  setupData = (rawData) => {\r\n    this.wordData = this.getWords(rawData);\r\n    this.fillerWords = this.getFillerWords(this.wordData);\r\n    this.generateRolls();\r\n  };\r\n\r\n  /**\r\n   * @param selection - the current d3 selection(s) to draw the visualization in.\r\n   */\r\n\r\n  setupVis = (selection) => {\r\n    this.svg = selection.selectAll(\"svg\").data([this.wordData]); // [array] wraps array as an another array with just 1 item inside\r\n    var svgEntry = this.svg.enter().append(\"svg\");\r\n    this.svg = this.svg.merge(svgEntry);\r\n    this.svg.attr(\"width\", this.width + this.margin.left + this.margin.right);\r\n    this.svg.attr(\"height\", this.height + this.margin.top + this.margin.bottom);\r\n    this.svg.append(\"g\");\r\n    this.g = this.svg\r\n      .select(\"g\")\r\n      .attr(\"transform\", `translate(${this.margin.left},${this.margin.top})`);\r\n  };\r\n\r\n  setupOverallIncrease = () => {\r\n    this.g\r\n      .append(\"text\")\r\n      .attr(\"class\", \"title tp-overall-increase highlight\")\r\n      .attr(\"x\", this.width / 2)\r\n      .attr(\"y\", this.height / 3)\r\n      .text(\"40%\");\r\n    this.g\r\n      .append(\"text\")\r\n      .attr(\"class\", \"sub-title tp-overall-increase\")\r\n      .attr(\"x\", this.width / 2)\r\n      .attr(\"y\", this.height / 3 + this.height / 5)\r\n      .text(\"Overall Increase\")\r\n      .style(\"fill\", \"#fff\");\r\n    this.g.selectAll(\".tp-overall-increase\").attr(\"opacity\", 0);\r\n  };\r\n\r\n  setupInvention = () => {\r\n    this.g\r\n      .append(\"image\")\r\n      .attr(\"class\", \"tp-invention-img\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", 0)\r\n      .attr(\"width\", this.width)\r\n      .attr(\"height\", this.height)\r\n      .attr(\"xlink:href\", \"./image/toilet_paper_invention.jpg\")\r\n      .attr(\"opacity\", 0);\r\n  };\r\n\r\n  setupGrid = () => {\r\n    const countryList = [\r\n      \"US\",\r\n      \"Germany\",\r\n      \"UK\",\r\n      \"Japan\",\r\n      \"Australia\",\r\n      \"Spain\",\r\n      \"France\",\r\n      \"Italy\",\r\n      \"China\",\r\n      \"Brazil\",\r\n    ];\r\n\r\n    this.colorScale = d3.scaleOrdinal().domain(countryList).range([\r\n      // \"#ab2668\", // purple\r\n      \"#ef3f5d\", // light-red\r\n      \"#00aaa9\", // green-blue\r\n      // \"#bfc0c2\", // light-grey\r\n      \"#fcf001\", // light-yellow\r\n      // \"#c2272d\", // dark red\r\n      // \"#c9da29\", // blue-yellow\r\n      // \"#03a7c1\", // blue-green\r\n      // \"#be1a8b\", // dark pink\r\n      \"#75d1f3\", // light blue\r\n      // \"#7f65aa\", // light purple\r\n      // \"#01aef0\", // blue\r\n      \"#ed0477\", // pink\r\n      // \"#5d2d91\", // dark purple\r\n      // \"#015aaa\", // blue\r\n      \"#84bc41\", // light green\r\n      \"#01954e\", // green\r\n      \"#ffc60e\", // yellow\r\n      // \"#94238e\", // purple\r\n      \"#ec6aa0\", // light pink\r\n      // \"#d71b32\", // red\r\n      \"#f69324\", // orange\r\n    ]);\r\n\r\n    let squares = this.g.selectAll(\".square\").data(this.rollsProcessed);\r\n    const squaresE = squares.enter().append(\"rect\").classed(\"square\", true);\r\n    squares = squares\r\n      .merge(squaresE)\r\n      .attr(\"width\", this.squareSize)\r\n      .attr(\"height\", this.squareSize)\r\n      .attr(\"fill\", (d) => this.colorScale(d.Country))\r\n      .attr(\"x\", (d) => d.x)\r\n      .attr(\"y\", (d) => d.y)\r\n      .attr(\"opacity\", 0)\r\n      .attr(\"transform\", `translate(0, ${50})`);\r\n\r\n    const legend = this.g\r\n      .selectAll(\".legend\")\r\n      .data(countryList)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .classed(\"legend\", true)\r\n      .attr(\"width\", this.squareSize)\r\n      .attr(\"height\", this.squareSize)\r\n      .attr(\"fill\", (d) => this.colorScale(d))\r\n      .attr(\"x\", (d, i) => i * this.squareSize * 6)\r\n      .attr(\"y\", 0)\r\n      .attr(\"opacity\", 0);\r\n\r\n    const legendText = this.g\r\n      .selectAll(\".legend-text\")\r\n      .data(countryList)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"class\", \"legend-text\")\r\n      .text((d) => d)\r\n      .attr(\"x\", (d, i) => i * this.squareSize * 6)\r\n      .attr(\"y\", 0)\r\n      .attr(\"transform\", `translate(0, ${this.squareSize + 15})`)\r\n      .style(\"font-size\", 10)\r\n      .attr(\"fill\", \"white\")\r\n      .attr(\"opacity\", 0);\r\n  };\r\n\r\n  setupBarChart = () => {\r\n    // const fillerCounts = this.groupByWord(this.fillerWords);\r\n    // const countMax = d3.max(fillerCounts, (d) => d.value);\r\n    // this.xBarScale = d3\r\n    //   .scaleLinear()\r\n    //   .domain([0, countMax])\r\n    //   .range([0, this.width]);\r\n    // this.yBarScale = d3\r\n    //   .scaleBand()\r\n    //   .paddingInner(0.08)\r\n    //   .domain([0, 1, 2])\r\n    //   .range([0, this.height - 50], 0.1, 0.1);\r\n    // this.xAxisBar = d3.axisBottom().scale(this.xBarScale);\r\n    // this.g\r\n    //   .append(\"g\")\r\n    //   .attr(\"class\", \"x axis\")\r\n    //   .attr(\"transform\", `translate(0, ${this.height - 40})`)\r\n    //   .call(this.xAxisBar);\r\n    // this.g.select(\".x.axis\").style(\"opacity\", 0);\r\n  };\r\n\r\n  setupHistogram = () => {\r\n    this.colors = {\r\n      0: \"#84bc41\", // light green\r\n      1: \"#fcf001\", // light yellow\r\n      2: \"#75d1f3\", // light blue\r\n      3: \"#ef3f5d\", // light-red\r\n    };\r\n    this.changeColorScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 1.0])\r\n      .range([\"#84bc41\", \"#75d1f3\"]);\r\n\r\n    this.xHistScale = d3\r\n      .scaleLinear()\r\n      .domain([1, 13])\r\n      .range([0, this.width - 20]);\r\n    this.xAxisHist = d3.axisBottom().scale(this.xHistScale);\r\n    this.g\r\n      .append(\"g\")\r\n      .attr(\"class\", \"x axis\")\r\n      .attr(\"transform\", `translate(0, ${this.height - 40})`)\r\n      .call(this.xHistScale);\r\n    this.g.select(\".x.axis\").style(\"opacity\", 0);\r\n\r\n    const histData = this.getOtherHist();\r\n    // const histData = this.getHistogram(this.fillerWords);\r\n    const histMax = d3.max(histData, (d) => d.length);\r\n\r\n    this.yHistScale = d3\r\n      .scaleLinear()\r\n      .domain([0, histMax])\r\n      .range([this.height, 0]);\r\n\r\n    let hist = this.g.selectAll(\".hist\").data(histData);\r\n    const histE = hist.enter().append(\"rect\").attr(\"class\", \"hist\");\r\n    hist = hist\r\n      .merge(histE)\r\n      .attr(\"x\", (d) => this.xHistScale(d.x0))\r\n      .attr(\"y\", this.height)\r\n      .attr(\"height\", 0)\r\n      .attr(\r\n        \"width\",\r\n        this.xHistScale(histData[0].x1) - this.xHistScale(histData[0].x0) - 1\r\n      )\r\n      .attr(\"transform\", `translate(0, ${-40})`)\r\n      .attr(\"fill\", this.colors[0])\r\n      .attr(\"opacity\", 0);\r\n  };\r\n\r\n  setupScroller = () => {\r\n    // setup onScroll event\r\n    const scroller = new Scroller(d3.selectAll(\".step\"), d3.select(\"#graphic\"));\r\n\r\n    scroller.on(\"active\", (curIndex) => {\r\n      d3.selectAll(\".step\").style(\"opacity\", (d, i) =>\r\n        i === curIndex ? 1 : 0.1\r\n      );\r\n\r\n      this.activate(curIndex);\r\n    });\r\n\r\n    scroller.on(\"progress\", (curIndex, progress) => {\r\n      this.update(curIndex, progress);\r\n    });\r\n\r\n    // setup start and end stick trigger\r\n    this.vis = document.querySelector(\"#vis\");\r\n    this.measure = document.querySelector(\"#graphic > .col\");\r\n    this.flexContainer = document.querySelector(\"#graphic\");\r\n\r\n    this.targetStart = this.measure.offsetTop;\r\n    this.targetEnd = this.targetStart + this.measure.offsetHeight;\r\n    this.rect = this.vis.getBoundingClientRect();\r\n\r\n    this.virtualElement = document.createElement(\"div\");\r\n    this.virtualElement.style.height = `${parseInt(this.rect.height)}px`;\r\n\r\n    window.addEventListener(\"scroll\", this.makeStick);\r\n  };\r\n\r\n  makeStick = () => {\r\n    const curTop = window.scrollY;\r\n    const curBot = window.innerHeight + curTop;\r\n    const hasStick = this.vis.classList.contains(\"stick\");\r\n\r\n    if (curTop >= this.targetStart && curBot <= this.targetEnd && !hasStick) {\r\n      this.vis.classList.add(\"stick\");\r\n      this.vis.style.width = `${parseInt(this.rect.width)}px`;\r\n      this.vis.parentNode.insertBefore(this.virtualElement, this.vis);\r\n\r\n      this.flexContainer.classList.remove(\"align-items-end\");\r\n      this.flexContainer.classList.add(\"align-items-start\");\r\n    } else if (curTop <= this.targetStart && hasStick) {\r\n      this.vis.classList.remove(\"stick\");\r\n      this.vis.style.width = \"auto\";\r\n      this.vis.parentNode.removeChild(this.virtualElement);\r\n    } else if (curBot >= this.targetEnd && hasStick) {\r\n      this.vis.classList.remove(\"stick\");\r\n      this.vis.style.width = \"auto\";\r\n      this.vis.parentNode.removeChild(this.virtualElement);\r\n\r\n      // this.flexContainer.classList.add(\"align-items-end\");\r\n      // this.flexContainer.classList.remove(\"align-items-start\");\r\n    }\r\n  };\r\n\r\n  setupSections = () => {\r\n    this.activateFunctions.push(\r\n      this.showTitle,\r\n      this.showInventionImg,\r\n      this.showSquares,\r\n      this.expandGrid,\r\n      this.highlightGrid,\r\n      this.showHistPart,\r\n      this.showHistAll,\r\n      this.showCough,\r\n      this.showNothing\r\n    );\r\n\r\n    for (let i = 0; i < this.activateFunctions.length; i++) {\r\n      this.updateFunctions[i] = function () {};\r\n    }\r\n    this.updateFunctions[7] = this.updateCough;\r\n  };\r\n\r\n  /**\r\n   * activate current section's visualization\r\n   * @param curIndex - index of the activated section\r\n   */\r\n  activate = (curIndex) => {\r\n    this.activeIndex = curIndex;\r\n    const dir = this.activeIndex > this.lastIndex ? 1 : -1;\r\n    const scrolledSections = d3.range(\r\n      this.lastIndex + dir,\r\n      this.activeIndex + dir,\r\n      dir\r\n    );\r\n    scrolledSections.forEach((i) => {\r\n      this.activateFunctions[i]();\r\n    });\r\n    this.lastIndex = this.activeIndex;\r\n  };\r\n\r\n  /**\r\n   * update current section's visualization based on progress\r\n   * @param curIndex - index of the activated section\r\n   * @param progress - progress of the activated section\r\n   */\r\n  update = (curIndex, progress) => {\r\n    this.updateFunctions[curIndex](progress);\r\n  };\r\n\r\n  //#endregion initialization\r\n\r\n  //#region data func\r\n\r\n  /**\r\n   * maps raw data to array of data objects.\r\n   * @param rawData - data read in from file\r\n   */\r\n  getWords = (rawData) => {\r\n    return rawData.map((d, i) => {\r\n      // post-process each data\r\n      d.filler = d.filler === \"1\" ? true : false;\r\n      d.time = +d.time;\r\n      d.min = Math.floor(d.time / 60);\r\n\r\n      // position for each square\r\n      d.col = i % this.numPerRow;\r\n      d.row = Math.floor(i / this.numPerRow);\r\n      d.x = d.col * (this.squareSize + this.squarePad);\r\n      d.y = d.row * (this.squareSize + this.squarePad);\r\n      return d;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * returns array of only filler words\r\n   * @param data - post-processed data from getWords()\r\n   */\r\n  getFillerWords = (data) => {\r\n    return data.filter((d) => d.filler);\r\n  };\r\n\r\n  /**\r\n   * use d3's histogram layout to generate histogram bins for our word data\r\n   * @param data - post-processed data from getFillerWords()\r\n   */\r\n  // getHistogram = (data) => {\r\n  //   const thirtyMins = data.filter((d) => d.min < 30);\r\n  //   console.log(this.xHistScale.ticks(10));\r\n  //   const bin = d3\r\n  //     .bin()\r\n  //     .thresholds(this.xHistScale.ticks(10))\r\n  //     .value((d) => d.min);\r\n  //   return bin(thirtyMins);\r\n  // };\r\n\r\n  getOtherHist = () => {\r\n    // create dataset\r\n    const increasePercentByMonth = [2, 4, 90, 42, 17, 8, 10, 5, 1, 9, 55, 50];\r\n    const data = [];\r\n    increasePercentByMonth.forEach((count, idx) => {\r\n      for (let j = 0; j < count; j++) {\r\n        data.push({\r\n          Month: idx + 1,\r\n        });\r\n      }\r\n    });\r\n\r\n    // bin the data\r\n    const bin = d3\r\n      .bin()\r\n      .thresholds(this.xHistScale.ticks())\r\n      .value((d) => d.Month);\r\n    return bin(data);\r\n  };\r\n\r\n  /**\r\n   * groupByWord - group words together using nest Used to get counts for bar charts.\r\n   * @param words\r\n   */\r\n  groupByWord = (words) => {\r\n    return d3Collection\r\n      .nest()\r\n      .key((d) => d.word)\r\n      .rollup((v) => v.length)\r\n      .entries(words)\r\n      .sort((a, b) => b.value - a.value);\r\n  };\r\n\r\n  generateRolls = () => {\r\n    this.rollsProcessed = [];\r\n    this.rollsRaw.forEach((d, i) => {\r\n      for (let count = 0; count < d.Rolls; count++) {\r\n        this.rollsProcessed.push({\r\n          Country: d.Country,\r\n        });\r\n      }\r\n    });\r\n    this.rollsProcessed.map((d, i) => {\r\n      d.col = i % this.numPerRow;\r\n      d.row = Math.floor(i / this.numPerRow);\r\n      d.x = d.col * (this.squareSize + this.squarePad);\r\n      d.y = d.row * (this.squareSize + this.squarePad);\r\n      return d;\r\n    });\r\n  };\r\n\r\n  //#endregion data func\r\n\r\n  //#region activate func\r\n\r\n  /**\r\n   * hides: count title\r\n   * (no previous step to hide)\r\n   * shows: intro title\r\n   */\r\n  showTitle = () => {\r\n    this.g\r\n      .selectAll(\".tp-invention-img\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 0);\r\n\r\n    this.g\r\n      .selectAll(\".tp-overall-increase\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"opacity\", 1.0);\r\n  };\r\n\r\n  /**\r\n   * hides: intro title\r\n   * hides: square grid\r\n   * shows: filler count title\r\n   */\r\n  showInventionImg = () => {\r\n    this.g\r\n      .selectAll(\".tp-overall-increase\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 0);\r\n\r\n    this.g.selectAll(\".square\").transition().duration(0).attr(\"opacity\", 0);\r\n    this.g.selectAll(\".legend\").transition().duration(0).attr(\"opacity\", 0);\r\n    this.g\r\n      .selectAll(\".legend-text\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 0);\r\n\r\n    this.g\r\n      .selectAll(\".tp-invention-img\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"opacity\", 1.0);\r\n  };\r\n\r\n  /**\r\n   * hides: square grid\r\n   * hides: histogram\r\n   * shows: barchart\r\n   */\r\n  showSquares = () => {\r\n    // hide before\r\n    this.g\r\n      .selectAll(\".tp-invention-img\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 0);\r\n\r\n    // show cur\r\n    this.g\r\n      .selectAll(\".square\")\r\n      .transition()\r\n      .duration(600)\r\n      .delay((d) => 5 * d.row)\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", (d) => d.y)\r\n      .attr(\"fill\", (d) => this.colorScale(d.Country))\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 1);\r\n\r\n    this.g.selectAll(\".legend\").transition().duration(600).attr(\"opacity\", 1);\r\n    this.g\r\n      .selectAll(\".legend-text\")\r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"opacity\", 1);\r\n\r\n    this.g\r\n      .selectAll(\".hist\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"height\", () => 0)\r\n      .attr(\"y\", () => this.height)\r\n      .style(\"opacity\", 0);\r\n  };\r\n\r\n  /**\r\n   * hides: filler count title\r\n   * hides: filler highlight in grid\r\n   * shows: square grid\r\n   */\r\n  expandGrid = () => {\r\n    // hide before\r\n    this.g\r\n      .selectAll(\".tp-invention-img\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 0);\r\n\r\n    // hide after\r\n    this.hideAxis();\r\n\r\n    // show cur\r\n    this.g\r\n      .selectAll(\".square\")\r\n      .transition()\r\n      .duration(600)\r\n      .delay((d) => 5 * d.row)\r\n      .attr(\"x\", (d) => d.x)\r\n      .attr(\"y\", (d) => d.y)\r\n      .attr(\"fill\", (d) => this.colorScale(d.Country))\r\n      .attr(\"opacity\", 1.0);\r\n\r\n    this.g.selectAll(\".legend\").transition().duration(600).attr(\"opacity\", 1);\r\n    this.g\r\n      .selectAll(\".legend-text\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"opacity\", 1);\r\n  };\r\n\r\n  /**\r\n   * hides: barchart, text and axis\r\n   * shows: square grid and highlighted\r\n   *  filler words. also ensures squares\r\n   *  are moved back to their place in the grid\r\n   */\r\n  highlightGrid = () => {\r\n    this.hideAxis();\r\n\r\n    // hide after\r\n    this.g\r\n      .selectAll(\".hist\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"y\", this.height)\r\n      .attr(\"height\", 0)\r\n      .style(\"opacity\", 1);\r\n\r\n    this.g\r\n      .selectAll(\".square\")\r\n      .transition()\r\n      .attr(\"x\", (d) => d.x)\r\n      .attr(\"y\", (d) => d.y)\r\n      .delay((d) => 5 * d.col)\r\n      .duration(600)\r\n      .attr(\"opacity\", 1.0);\r\n    this.g.selectAll(\".legend\").transition().duration(0).attr(\"opacity\", 1);\r\n    this.g\r\n      .selectAll(\".legend-text\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 1);\r\n\r\n    // use named transition to ensure move happens even if other transitions are interrupted.\r\n    this.g\r\n      .selectAll(\".square\")\r\n      .transition(\"move-fills\")\r\n      .duration(800)\r\n      .attr(\"opacity\", 1.0)\r\n      .attr(\"fill\", (d) =>\r\n        d.Country === \"US\" ? this.colorScale(\"US\") : \"lightgrey\"\r\n      );\r\n  };\r\n\r\n  /**\r\n   * hides: barchart\r\n   * hides: last half of histogram\r\n   * shows: first half of histogram\r\n   */\r\n  showHistPart = () => {\r\n    // hide before\r\n    this.g\r\n      .selectAll(\".square\")\r\n      .transition()\r\n      .duration(600)\r\n      .delay((d) => 5 * d.col)\r\n      .attr(\"y\", this.height - 100)\r\n      .attr(\"opacity\", 0);\r\n    this.g.selectAll(\".legend\").transition().duration(0).attr(\"opacity\", 0);\r\n    this.g\r\n      .selectAll(\".legend-text\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 0);\r\n\r\n    // show current\r\n    this.showAxis(this.xAxisHist);\r\n    this.g\r\n      .selectAll(\".hist\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"y\", (d) => (d.x0 <= 2 ? this.yHistScale(d.length) : this.height))\r\n      .attr(\"height\", (d) =>\r\n        d.x0 <= 2 ? this.height - this.yHistScale(d.length) : 0\r\n      )\r\n      .style(\"opacity\", (d) => (d.x0 <= 2 ? 1.0 : 1e-6));\r\n  };\r\n\r\n  /**\r\n   * hides: cough title and color\r\n   * (previous step is also part of the\r\n   *  histogram, so we don't have to hide\r\n   *  that)\r\n   * shows: all histogram bars\r\n   */\r\n  showHistAll = () => {\r\n    // ensure the axis to histogram one\r\n    this.showAxis(this.xAxisHist);\r\n    this.g\r\n      .selectAll(\".hist\")\r\n      .transition()\r\n      .duration(800)\r\n      .attr(\"y\", (d) => this.yHistScale(d.length))\r\n      .attr(\"height\", (d) => this.height - this.yHistScale(d.length))\r\n      .attr(\"fill\", (d) => (d.x0 <= 2 ? this.colors[0] : this.colors[3]))\r\n      .style(\"opacity\", 1.0);\r\n  };\r\n\r\n  /**\r\n   * hides: nothing\r\n   * (previous and next sections are histograms\r\n   *  so we don't have to hide much here)\r\n   * shows: histogram\r\n   */\r\n  showCough = () => {\r\n    // hide before\r\n    // this.g\r\n    //   .selectAll(\".hist\")\r\n    //   .transition()\r\n    //   .duration(600)\r\n    //   .attr(\"y\", this.height)\r\n    //   .attr(\"height\", 0)\r\n    //   .style(\"opacity\", 0);\r\n    this.hideAxis();\r\n    this.g.selectAll(\".hist\").transition().duration(300).style(\"opacity\", 0);\r\n  };\r\n\r\n  showNothing = () => {\r\n    this.hideAxis();\r\n  };\r\n\r\n  /**\r\n   * helper function\r\n   * @param axis - the axis to show\r\n   *  (xAxisHist or xAxisBar)\r\n   */\r\n  showAxis = (axis) => {\r\n    this.g\r\n      .select(\".x.axis\")\r\n      .call(axis)\r\n      .transition()\r\n      .duration(500)\r\n      .style(\"opacity\", 1);\r\n  };\r\n\r\n  /**\r\n   * helper function\r\n   * to hide the axis\r\n   */\r\n  hideAxis = () => {\r\n    this.g.select(\".x.axis\").transition().duration(500).style(\"opacity\", 0);\r\n  };\r\n\r\n  /**\r\n   * UPDATE FUNCTIONS\r\n   *\r\n   * These will be called within a section\r\n   * as the user scrolls through it.\r\n   *\r\n   * We use an immediate transition to\r\n   * update visual elements based on\r\n   * how far the user has scrolled\r\n   *\r\n   */\r\n\r\n  /**\r\n   * @param progress - 0.0 - 1.0 -\r\n   *  how far user has scrolled in section\r\n   */\r\n  updateCough = (progress) => {\r\n    // this.g\r\n    //   .selectAll(\".cough\")\r\n    //   .transition()\r\n    //   .duration(0)\r\n    //   .attr(\"opacity\", progress);\r\n    // this.g\r\n    //   .selectAll(\".hist\")\r\n    //   .transition(\"cough\")\r\n    //   .duration(0)\r\n    //   .style(\"fill\", (d) => {\r\n    //     return d.x0 >= 14 ? this.coughColorScale(progress) : \"#008080\";\r\n    //   });\r\n  };\r\n\r\n  //#endregion activate func\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" id=\"toilet\">\r\n        <div className=\"row d-flex align-items-start\" id=\"graphic\">\r\n          <div className=\"col\">\r\n            <div id=\"sections\">\r\n              <section className=\"step\">\r\n                <div className=\"title\">Issues With Tissues</div>\r\n                At the beginning of the pandemic in the U.S., brief shortages of\r\n                food, disinfectants and toiletries swept through the country.\r\n                Americans were quick to stock up on essentials like Lysol,\r\n                toilet paper and paper towels, and this wave of purchases caused\r\n                a shortfall that’s lasted for months.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">Invention</div>\r\n                The origins of Toilet Paper can be dated back to 14th Century\r\n                China, where it was used by the Emperor and his family.\r\n                <br />\r\n                <br />\r\n                In the 15th Century, paper became easier to produce, but the\r\n                19th Century is where it boomed thanks to mass production. A man\r\n                by the name of <span>Joseph C. Gayetty</span> created the first\r\n                ever commercial toilet paper - which were not in rolls, but\r\n                arrived as flat sheets sold in bulk Ever since the mass\r\n                commercialisation of toilet paper, new advances came into play\r\n                such as <span>Walter Alcocks</span> paper, which was perforated.\r\n                <br />\r\n                <br />\r\n                In other parts of the world, <span>St. Andrew's</span> Paper\r\n                Mill in the UK developed the first 2 ply toilet paper Toilet\r\n                paper has been developing ever since - until the 21st century,\r\n                where finally people it became a limited necessity due to\r\n                hoarding across the world.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">The Rank</div>\r\n                If we look at the country rank on toilet paper consumption, the\r\n                US is taking a lead.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">The World</div>\r\n                If each square is one roll of toilet paper, this is the top 10\r\n                country rank on toilet paper consumption per capita. And the\r\n                Americans consume 91 rolls per person per year.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">The US VS The World</div>The proportion\r\n                between US and the rest of the top 10 countries.\r\n              </section>\r\n\r\n              <section className=\"step\">\r\n                <div className=\"title\">Pre-COVID</div>\r\n                Before COVID-19, this is how much more toilet paper we consume\r\n                in percentage compare to the same month in 2019.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">Panic Mode</div>\r\n                When COVID-10 kicked in, the consumption of toilet paper\r\n                dramatically increased.\r\n              </section>\r\n              {/* <section className=\"step\">\r\n                <div className=\"title\">How Much Toilet Paper Do You Need?</div>\r\n                Unfortunately, the trend does not continue. Midway into the talk\r\n                my Um's and Ah's spike. I continue to use them pretty\r\n                consistently throughout the rest of the talk.\r\n              </section> */}\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"col d-flex align-items-center\"\r\n            style={{ marginTop: 150, marginLeft: 15, marginRight: 15 }}\r\n          >\r\n            <div id=\"vis\" style={{ height: window.innerHeight }}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Introduction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.imagePath = \"image/ending.png\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"introduction container-fluid d-flex align-items-center\"\r\n        id=\"introduction\"\r\n        style={{\r\n          height: window.innerHeight,\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h1 className=\"text-right\" style={{ fontSize: \"4em\" }}>\r\n              Reflection\r\n            </h1>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <img src={`${this.imagePath}`} style={{ width: \"100%\" }} />\r\n          </div>\r\n          <div className=\"col-6 text-justify\">\r\n            <p>\r\n              In many ways, the negatives clearly outweigh the positives.\r\n              Eventually, it is still a pandemic that had killed more than\r\n              730,000 Americans. However, we cannot ignore the positive impacts\r\n              such as energy, relationships, work-life-balance, and more. It is\r\n              a mixed bag at the end of the day.\r\n            </p>\r\n            <br />\r\n            <p>\r\n              Globally, by claiming ownership over skills development and\r\n              embracing remote work, employees have been able to take more\r\n              control of their careers and professional growth. For many, the\r\n              ‘new normal’ has enabled organizations to pinpoint growth\r\n              opportunities and advance digitization. We see how leading\r\n              companies have placed greater emphasis on advancing cutting-edge\r\n              technologies and fostering digital collaboration. Executives have\r\n              found that the crisis has created significant opportunities for\r\n              their organizations, it has accelerated their digital\r\n              transformation efforts. The slowdown effect of the lock-down has\r\n              afforded respondents greater control over how they allocate their\r\n              time, with many grateful for the opportunity to reevaluate their\r\n              priorities. We all appreciated the opportunity to reconnect with\r\n              what’s important to us, with parents particularly grateful to have\r\n              more flexible hours at their disposal.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/*\r\nref: https://github.com/vlandham/scroll_demo\r\nhttps://vallandingham.me/think_you_can_scroll.html\r\nhttps://github.com/vlandham/scroll_demo/blob/gh-pages/post.md\r\nhttps://lancecourse.com/howto/the-science-of-creating-fixed-components-on-scroll-with-vanilla-javascript\r\n*/\r\nimport React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport * as d3Collection from \"d3-collection\";\r\nimport Scroller from \"../utils/Scroller\";\r\n\r\nexport default class ToiletPaper extends React.Component {\r\n  width = 600;\r\n  height = 600;\r\n  margin = { top: 20, left: 20, bottom: 20, right: 20 };\r\n  lastIndex = -1;\r\n  activeIndex = 0;\r\n\r\n  squareSize = 6;\r\n  squarePad = 2;\r\n  numPerRow = this.width / (this.squareSize + this.squarePad);\r\n\r\n  svg = null;\r\n  g = null;\r\n  colors = { 0: \"#84bc41\", 1: \"#fcf001\", 2: \"#75d1f3\" };\r\n\r\n  activateFunctions = [];\r\n  updateFunctions = [];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    d3.tsv(\"./data/words.tsv\").then((data) => {\r\n      this.init(data);\r\n    });\r\n  };\r\n\r\n  //#region initialization\r\n\r\n  /**\r\n   * called once data has been loaded.\r\n   * @param rawData - loaded tsv data\r\n   */\r\n  init = (rawData) => {\r\n    this.setupData(rawData);\r\n\r\n    this.setupVis(d3.select(\"#vis\"));\r\n    this.setupOthers();\r\n    this.setupBarChart();\r\n    this.setupHistogram();\r\n\r\n    this.setupScroller();\r\n    this.setupSections();\r\n  };\r\n\r\n  setupData = (rawData) => {\r\n    this.wordData = this.getWords(rawData);\r\n    this.fillerWords = this.getFillerWords(this.wordData);\r\n  };\r\n\r\n  /**\r\n   * @param selection - the current d3 selection(s) to draw the visualization in.\r\n   */\r\n\r\n  setupVis = (selection) => {\r\n    this.svg = selection.selectAll(\"svg\").data([this.wordData]); // [array] wraps array as an another array with just 1 item inside\r\n    var svgEntry = this.svg.enter().append(\"svg\");\r\n    this.svg = this.svg.merge(svgEntry);\r\n    this.svg.attr(\"width\", this.width + this.margin.left + this.margin.right);\r\n    this.svg.attr(\"height\", this.height + this.margin.top + this.margin.bottom);\r\n    this.svg.append(\"g\");\r\n    this.g = this.svg\r\n      .select(\"g\")\r\n      .attr(\"transform\", `translate(${this.margin.left},${this.margin.top})`);\r\n  };\r\n\r\n  setupOthers = () => {\r\n    //openVis title\r\n    this.g\r\n      .append(\"text\")\r\n      .attr(\"class\", \"title openvis-title\")\r\n      .attr(\"x\", this.width / 2)\r\n      .attr(\"y\", this.height / 3)\r\n      .text(\"2013\");\r\n    this.g\r\n      .append(\"text\")\r\n      .attr(\"class\", \"sub-title openvis-title\")\r\n      .attr(\"x\", this.width / 2)\r\n      .attr(\"y\", this.height / 3 + this.height / 5)\r\n      .text(\"OpenVis Conf\");\r\n    this.g.selectAll(\".openvis-title\").attr(\"opacity\", 0);\r\n\r\n    // count filler word count title\r\n    this.g\r\n      .append(\"text\")\r\n      .attr(\"class\", \"title count-title highlight\")\r\n      .attr(\"x\", this.width / 2)\r\n      .attr(\"y\", this.height / 3)\r\n      .text(\"180\");\r\n    this.g\r\n      .append(\"text\")\r\n      .attr(\"class\", \"sub-title count-title\")\r\n      .attr(\"x\", this.width / 2)\r\n      .attr(\"y\", this.height / 3 + this.height / 5)\r\n      .text(\"Filler Words\");\r\n    this.g.selectAll(\".count-title\").attr(\"opacity\", 0);\r\n\r\n    // square grid\r\n    let squares = this.g\r\n      .selectAll(\".square\")\r\n      .data(this.wordData, (d) => d.word);\r\n    const squaresE = squares.enter().append(\"rect\").classed(\"square\", true);\r\n    squares = squares\r\n      .merge(squaresE)\r\n      .attr(\"width\", this.squareSize)\r\n      .attr(\"height\", this.squareSize)\r\n      .attr(\"fill\", \"#d8d8d8\")\r\n      .classed(\"fill-square\", (d) => d.filler)\r\n      .attr(\"x\", (d) => d.x)\r\n      .attr(\"y\", (d) => d.y)\r\n      .attr(\"opacity\", 0);\r\n\r\n    // cough title\r\n    this.g\r\n      .append(\"text\")\r\n      .attr(\"class\", \"sub-title cough cough-title\")\r\n      .attr(\"x\", this.width / 2)\r\n      .attr(\"y\", 60)\r\n      .text(\"cough\")\r\n      .attr(\"opacity\", 0);\r\n    // arrowhead\r\n    this.svg\r\n      .append(\"defs\")\r\n      .append(\"marker\")\r\n      .attr(\"id\", \"arrowhead\")\r\n      .attr(\"refY\", 2)\r\n      .attr(\"markerWidth\", 6)\r\n      .attr(\"markerHeight\", 4)\r\n      .attr(\"orient\", \"auto\")\r\n      .append(\"path\")\r\n      .attr(\"d\", \"M 0,0 V 4 L6,2 Z\");\r\n    this.g\r\n      .append(\"path\")\r\n      .attr(\"class\", \"cough cough-arrow\")\r\n      .attr(\"marker-end\", \"url(#arrowhead)\")\r\n      .attr(\"d\", () => {\r\n        let line = \"M \" + (this.width / 2 - 10) + \" \" + 80;\r\n        line += \" l 0 \" + 230;\r\n        return line;\r\n      })\r\n      .attr(\"opacity\", 0);\r\n  };\r\n\r\n  setupBarChart = () => {\r\n    const fillerCounts = this.groupByWord(this.fillerWords);\r\n    const countMax = d3.max(fillerCounts, (d) => d.value);\r\n\r\n    this.xBarScale = d3\r\n      .scaleLinear()\r\n      .domain([0, countMax])\r\n      .range([0, this.width]);\r\n    this.yBarScale = d3\r\n      .scaleBand()\r\n      .paddingInner(0.08)\r\n      .domain([0, 1, 2])\r\n      .range([0, this.height - 50], 0.1, 0.1);\r\n    this.xAxisBar = d3.axisBottom().scale(this.xBarScale);\r\n\r\n    this.g\r\n      .append(\"g\")\r\n      .attr(\"class\", \"x axis\")\r\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\r\n      .call(this.xAxisBar);\r\n    this.g.select(\".x.axis\").style(\"opacity\", 0);\r\n\r\n    let bars = this.g.selectAll(\".bar\").data(fillerCounts);\r\n    const barsE = bars.enter().append(\"rect\").attr(\"class\", \"bar\");\r\n    bars = bars\r\n      .merge(barsE)\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", (d, i) => this.yBarScale(i))\r\n      .attr(\"fill\", (d, i) => this.colors[i])\r\n      .attr(\"width\", 0)\r\n      .attr(\"height\", this.yBarScale.bandwidth());\r\n    const barText = this.g\r\n      .selectAll(\".bar-text\")\r\n      .data(fillerCounts)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"class\", \"bar-text\")\r\n      .text((d) => `${d.key}…`)\r\n      .attr(\"x\", 0)\r\n      .attr(\"dx\", 15)\r\n      .attr(\"y\", (d, i) => this.yBarScale(i))\r\n      .attr(\"dy\", this.yBarScale.bandwidth() / 1.2)\r\n      .style(\"font-size\", \"110px\")\r\n      .attr(\"fill\", \"white\")\r\n      .attr(\"opacity\", 0);\r\n  };\r\n\r\n  setupHistogram = () => {\r\n    this.xHistScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 30])\r\n      .range([0, this.width - 20]);\r\n\r\n    const histData = this.getHistogram(this.fillerWords);\r\n\r\n    this.xAxisHist = d3\r\n      .axisBottom()\r\n      .scale(this.xHistScale)\r\n      .tickFormat((d) => `${d} min`);\r\n    this.coughColorScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 1.0])\r\n      .range([\"#75d1f3\", \"#75d1f3\"]);\r\n\r\n    const histMax = d3.max(histData, (d) => d.length);\r\n    this.yHistScale = d3\r\n      .scaleLinear()\r\n      .domain([0, histMax])\r\n      .range([this.height, 0]);\r\n\r\n    let hist = this.g.selectAll(\".hist\").data(histData);\r\n    const histE = hist.enter().append(\"rect\").attr(\"class\", \"hist\");\r\n    hist = hist\r\n      .merge(histE)\r\n      .attr(\"x\", (d) => this.xHistScale(d.x0))\r\n      .attr(\"y\", this.height)\r\n      .attr(\"height\", 0)\r\n      .attr(\r\n        \"width\",\r\n        this.xHistScale(histData[0].x1) - this.xHistScale(histData[0].x0) - 1\r\n      )\r\n      .attr(\"fill\", this.colors[0])\r\n      .attr(\"opacity\", 0);\r\n  };\r\n\r\n  setupScroller = () => {\r\n    // setup onScroll event\r\n    const scroller = new Scroller(d3.selectAll(\".step\"), d3.select(\"#graphic\"));\r\n\r\n    scroller.on(\"active\", (curIndex) => {\r\n      d3.selectAll(\".step\").style(\"opacity\", (d, i) =>\r\n        i === curIndex ? 1 : 0.1\r\n      );\r\n\r\n      this.activate(curIndex);\r\n    });\r\n\r\n    scroller.on(\"progress\", (curIndex, progress) => {\r\n      this.update(curIndex, progress);\r\n    });\r\n\r\n    // setup start and end stick trigger\r\n    this.vis = document.querySelector(\"#vis\");\r\n    this.measure = document.querySelector(\"#graphic > .col\");\r\n    this.flexContainer = document.querySelector(\"#graphic\");\r\n\r\n    this.start = this.measure.offsetTop;\r\n    this.end = this.start + this.measure.offsetHeight;\r\n    this.rect = this.vis.getBoundingClientRect();\r\n\r\n    this.virtualElement = document.createElement(\"div\");\r\n    this.virtualElement.style.height = `${parseInt(this.rect.height)}px`;\r\n\r\n    window.addEventListener(\"scroll\", this.makeStick);\r\n  };\r\n\r\n  makeStick = () => {\r\n    const curTop = window.scrollY;\r\n    const curBot = window.innerHeight + curTop;\r\n    const hasStick = this.vis.classList.contains(\"stick\");\r\n\r\n    if (curTop >= this.start && curBot <= this.end && !hasStick) {\r\n      this.vis.classList.add(\"stick\");\r\n      this.vis.style.width = `${parseInt(this.rect.width)}px`;\r\n      this.vis.parentNode.insertBefore(this.virtualElement, this.vis);\r\n\r\n      this.flexContainer.classList.remove(\"align-items-end\");\r\n      this.flexContainer.classList.add(\"align-items-start\");\r\n    } else if (curTop <= this.start && hasStick) {\r\n      this.vis.classList.remove(\"stick\");\r\n      this.vis.style.width = \"auto\";\r\n      this.vis.parentNode.removeChild(this.virtualElement);\r\n    } else if (curTop >= 4000 && hasStick) {\r\n      this.vis.classList.remove(\"stick\");\r\n      this.vis.style.width = \"auto\";\r\n      this.vis.parentNode.removeChild(this.virtualElement);\r\n\r\n      this.flexContainer.classList.add(\"align-items-end\");\r\n      this.flexContainer.classList.remove(\"align-items-start\");\r\n    }\r\n  };\r\n\r\n  setupSections = () => {\r\n    this.activateFunctions[0] = this.showTitle;\r\n    this.activateFunctions[1] = this.showFillerTitle;\r\n    this.activateFunctions[2] = this.showGrid;\r\n    this.activateFunctions[3] = this.highlightGrid;\r\n    this.activateFunctions[4] = this.showBar;\r\n    this.activateFunctions[5] = this.showHistPart;\r\n    this.activateFunctions[6] = this.showHistAll;\r\n    this.activateFunctions[7] = this.showCough;\r\n    this.activateFunctions[8] = this.showHistAll;\r\n\r\n    for (let i = 0; i < 9; i++) {\r\n      this.updateFunctions[i] = function () {};\r\n    }\r\n    this.updateFunctions[7] = this.updateCough;\r\n  };\r\n\r\n  /**\r\n   * activate current section's visualization\r\n   * @param curIndex - index of the activated section\r\n   */\r\n  activate = (curIndex) => {\r\n    this.activeIndex = curIndex;\r\n    const dir = this.activeIndex > this.lastIndex ? 1 : -1;\r\n    const scrolledSections = d3.range(\r\n      this.lastIndex + dir,\r\n      this.activeIndex + dir,\r\n      dir\r\n    );\r\n    scrolledSections.forEach((i) => {\r\n      this.activateFunctions[i]();\r\n    });\r\n    this.lastIndex = this.activeIndex;\r\n  };\r\n\r\n  /**\r\n   * update current section's visualization based on progress\r\n   * @param curIndex - index of the activated section\r\n   * @param progress - progress of the activated section\r\n   */\r\n  update = (curIndex, progress) => {\r\n    this.updateFunctions[curIndex](progress);\r\n  };\r\n\r\n  //#endregion initialization\r\n\r\n  //#region data func\r\n\r\n  /**\r\n   * maps raw data to array of data objects.\r\n   * @param rawData - data read in from file\r\n   */\r\n  getWords = (rawData) => {\r\n    return rawData.map((d, i) => {\r\n      // post-process each data\r\n      d.filler = d.filler === \"1\" ? true : false;\r\n      d.time = +d.time;\r\n      d.min = Math.floor(d.time / 60);\r\n\r\n      // position for each square\r\n      d.col = i % this.numPerRow;\r\n      d.row = Math.floor(i / this.numPerRow);\r\n      d.x = d.col * (this.squareSize + this.squarePad);\r\n      d.y = d.row * (this.squareSize + this.squarePad);\r\n      return d;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * returns array of only filler words\r\n   * @param data - post-processed data from getWords()\r\n   */\r\n  getFillerWords = (data) => {\r\n    return data.filter((d) => d.filler);\r\n  };\r\n\r\n  /**\r\n   * use d3's histogram layout to generate histogram bins for our word data\r\n   * @param data - post-processed data from getFillerWords()\r\n   */\r\n  getHistogram = (data) => {\r\n    const thirtyMins = data.filter((d) => d.min < 30);\r\n    return d3\r\n      .bin()\r\n      .thresholds(this.xHistScale.ticks(10))\r\n      .value((d) => d.min)(thirtyMins);\r\n  };\r\n\r\n  /**\r\n   * groupByWord - group words together using nest Used to get counts for bar charts.\r\n   * @param words\r\n   */\r\n  groupByWord = (words) => {\r\n    return d3Collection\r\n      .nest()\r\n      .key((d) => d.word)\r\n      .rollup((v) => v.length)\r\n      .entries(words)\r\n      .sort((a, b) => b.value - a.value);\r\n  };\r\n\r\n  //#endregion data func\r\n\r\n  //#region activate func\r\n\r\n  /**\r\n   * hides: count title\r\n   * (no previous step to hide)\r\n   * shows: intro title\r\n   */\r\n  showTitle = () => {\r\n    this.g\r\n      .selectAll(\".count-title\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 0);\r\n\r\n    this.g\r\n      .selectAll(\".openvis-title\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"opacity\", 1.0);\r\n  };\r\n\r\n  /**\r\n   * hides: intro title\r\n   * hides: square grid\r\n   * shows: filler count title\r\n   */\r\n  showFillerTitle = () => {\r\n    this.g\r\n      .selectAll(\".openvis-title\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 0);\r\n\r\n    this.g.selectAll(\".square\").transition().duration(0).attr(\"opacity\", 0);\r\n\r\n    this.g\r\n      .selectAll(\".count-title\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"opacity\", 1.0);\r\n  };\r\n\r\n  /**\r\n   * hides: filler count title\r\n   * hides: filler highlight in grid\r\n   * shows: square grid\r\n   */\r\n  showGrid = () => {\r\n    this.g\r\n      .selectAll(\".count-title\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 0);\r\n\r\n    this.g\r\n      .selectAll(\".square\")\r\n      .transition()\r\n      .duration(600)\r\n      .delay((d) => 5 * d.row)\r\n      .attr(\"opacity\", 1.0)\r\n      .attr(\"fill\", \"#ddd\");\r\n  };\r\n\r\n  /**\r\n   * hides: barchart, text and axis\r\n   * shows: square grid and highlighted\r\n   *  filler words. also ensures squares\r\n   *  are moved back to their place in the grid\r\n   */\r\n  highlightGrid = () => {\r\n    this.hideAxis();\r\n\r\n    this.g.selectAll(\".bar\").transition().duration(600).attr(\"width\", 0);\r\n    this.g.selectAll(\".bar-text\").transition().duration(0).attr(\"opacity\", 0);\r\n\r\n    this.g\r\n      .selectAll(\".square\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 1.0)\r\n      .attr(\"fill\", \"#ddd\");\r\n\r\n    // use named transition to ensure move happens even if other transitions are interrupted.\r\n    this.g\r\n      .selectAll(\".fill-square\")\r\n      .transition(\"move-fills\")\r\n      .duration(800)\r\n      .attr(\"x\", (d) => d.x)\r\n      .attr(\"y\", (d) => d.y);\r\n\r\n    this.g\r\n      .selectAll(\".fill-square\")\r\n      .transition()\r\n      .duration(800)\r\n      .attr(\"opacity\", 1.0)\r\n      .attr(\"fill\", (d) => (d.filler ? \"orange\" : \"black\"));\r\n  };\r\n\r\n  /**\r\n   * hides: square grid\r\n   * hides: histogram\r\n   * shows: barchart\r\n   */\r\n  showBar = () => {\r\n    // ensure bar axis is set\r\n    this.showAxis(this.xAxisBar);\r\n\r\n    this.g.selectAll(\".square\").transition().duration(800).attr(\"opacity\", 0);\r\n\r\n    this.g\r\n      .selectAll(\".fill-square\")\r\n      .transition()\r\n      .duration(800)\r\n      .attr(\"x\", 0)\r\n      .attr(\r\n        \"y\",\r\n        (d, i) => this.yBarScale(i % 3) + this.yBarScale.bandwidth() / 2\r\n      )\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", 0);\r\n\r\n    this.g\r\n      .selectAll(\".hist\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"height\", () => 0)\r\n      .attr(\"y\", () => this.height)\r\n      .style(\"opacity\", 0);\r\n\r\n    this.g\r\n      .selectAll(\".bar\")\r\n      .transition()\r\n      .delay((d, i) => 300 * (i + 1))\r\n      .duration(600)\r\n      .attr(\"width\", (d) => this.xBarScale(d.value));\r\n\r\n    this.g\r\n      .selectAll(\".bar-text\")\r\n      .transition()\r\n      .duration(600)\r\n      .delay(1200)\r\n      .attr(\"opacity\", 1);\r\n  };\r\n\r\n  /**\r\n   * hides: barchart\r\n   * hides: last half of histogram\r\n   * shows: first half of histogram\r\n   */\r\n  showHistPart = () => {\r\n    // switch the axis to histogram one\r\n    this.showAxis(this.xAxisHist);\r\n\r\n    this.g.selectAll(\".bar-text\").transition().duration(0).attr(\"opacity\", 0);\r\n\r\n    this.g.selectAll(\".bar\").transition().duration(600).attr(\"width\", 0);\r\n\r\n    // here we only show a bar if it is before the 15 minute mark\r\n    this.g\r\n      .selectAll(\".hist\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"y\", (d) => (d.x0 < 15 ? this.yHistScale(d.length) : this.height))\r\n      .attr(\"height\", (d) =>\r\n        d.x0 < 15 ? this.height - this.yHistScale(d.length) : 0\r\n      )\r\n      .style(\"opacity\", (d) => (d.x0 < 15 ? 1.0 : 1e-6));\r\n  };\r\n\r\n  /**\r\n   * hides: cough title and color\r\n   * (previous step is also part of the\r\n   *  histogram, so we don't have to hide\r\n   *  that)\r\n   * shows: all histogram bars\r\n   */\r\n  showHistAll = () => {\r\n    // ensure the axis to histogram one\r\n    this.showAxis(this.xAxisHist);\r\n\r\n    this.g.selectAll(\".cough\").transition().duration(0).attr(\"opacity\", 0);\r\n\r\n    // named transition to ensure color change is not clobbered\r\n    this.g\r\n      .selectAll(\".hist\")\r\n      .transition(\"color\")\r\n      .duration(500)\r\n      .style(\"fill\", \"#008080\");\r\n\r\n    this.g\r\n      .selectAll(\".hist\")\r\n      .transition()\r\n      .duration(1200)\r\n      .attr(\"y\", (d) => this.yHistScale(d.length))\r\n      .attr(\"height\", (d) => this.height - this.yHistScale(d.length))\r\n      .style(\"opacity\", 1.0);\r\n  };\r\n\r\n  /**\r\n   * hides: nothing\r\n   * (previous and next sections are histograms\r\n   *  so we don't have to hide much here)\r\n   * shows: histogram\r\n   */\r\n  showCough = () => {\r\n    // ensure the axis to histogram one\r\n    this.showAxis(this.xAxisHist);\r\n\r\n    this.g\r\n      .selectAll(\".hist\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"y\", (d) => this.yHistScale(d.length))\r\n      .attr(\"height\", (d) => this.height - this.yHistScale(d.length))\r\n      .style(\"opacity\", 1.0);\r\n  };\r\n\r\n  /**\r\n   * helper function\r\n   * @param axis - the axis to show\r\n   *  (xAxisHist or xAxisBar)\r\n   */\r\n  showAxis = (axis) => {\r\n    this.g\r\n      .select(\".x.axis\")\r\n      .call(axis)\r\n      .transition()\r\n      .duration(500)\r\n      .style(\"opacity\", 1);\r\n  };\r\n\r\n  /**\r\n   * helper function\r\n   * to hide the axis\r\n   */\r\n  hideAxis = () => {\r\n    this.g.select(\".x.axis\").transition().duration(500).style(\"opacity\", 0);\r\n  };\r\n\r\n  /**\r\n   * UPDATE FUNCTIONS\r\n   *\r\n   * These will be called within a section\r\n   * as the user scrolls through it.\r\n   *\r\n   * We use an immediate transition to\r\n   * update visual elements based on\r\n   * how far the user has scrolled\r\n   *\r\n   */\r\n\r\n  /**\r\n   * @param progress - 0.0 - 1.0 -\r\n   *  how far user has scrolled in section\r\n   */\r\n  updateCough = (progress) => {\r\n    this.g\r\n      .selectAll(\".cough\")\r\n      .transition()\r\n      .duration(0)\r\n      .attr(\"opacity\", progress);\r\n\r\n    this.g\r\n      .selectAll(\".hist\")\r\n      .transition(\"cough\")\r\n      .duration(0)\r\n      .style(\"fill\", (d) => {\r\n        console.log(d.x0);\r\n        return d.x0 >= 14 ? this.coughColorScale(progress) : \"#008080\";\r\n      });\r\n  };\r\n\r\n  //#endregion activate func\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" id=\"toilet\">\r\n        <div className=\"row d-flex align-items-start\" id=\"graphic\">\r\n          <div className=\"col\">\r\n            <div id=\"sections\">\r\n              <section className=\"step\">\r\n                <div className=\"title\">OpenVis Conf 2013</div>\r\n                I did what no presenter should ever do: I watched my own talk.\r\n                <br />\r\n                <br />\r\n                My first visit to OpenVis Conf in 2013.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">Filler Words</div>\r\n                As expected, I could only focus on the flaws: the rushed speech,\r\n                the odd phrases, and, most especially, all the filler words. In\r\n                fact, I found 180 filler words in my 30 minute talk.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">My Talk</div>\r\n                Here are all 5,040 words of my talk.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">My Stumbles</div>\r\n                And here are all the fillers I used in those 30 minutes.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">Um's, Ah's &amp; Uh's</div>I almost\r\n                exclusively used these three fillers. Um's and Ah's made up over\r\n                80%, with Uh's trailing behind.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">Fillers Over Time</div>I hoped that all\r\n                these blunders were toward the beginning of my talk. And the\r\n                data suggests that fewer fillers are used as I get into it.\r\n                Perhaps the talk started out rough and improved as I found my\r\n                groove.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">Ramping Back Up</div>\r\n                Unfortunately, the trend does not continue. Midway into the talk\r\n                my Um's and Ah's spike. I continue to use them pretty\r\n                consistently throughout the rest of the talk.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">The Cough Effect</div>\r\n                My theory is that at this critical halfway point in my talk, I\r\n                heard a dry cough indicative of the audience's waning interest.\r\n                This caused self-confidence to collapse and forced me out of my\r\n                groove.\r\n                <br />\r\n                <br />A competing theory is that I just hadn't practiced the\r\n                last half of my speech as much.\r\n              </section>\r\n              <section className=\"step\">\r\n                <div className=\"title\">Best of Luck to Me in 2015</div>\r\n                The world may never know, or care, but hopefully these insights\r\n                improve my speaking in 2015. Though preliminary results aren't\r\n                looking so good.\r\n              </section>\r\n            </div>\r\n          </div>\r\n          <div className=\"col d-flex align-items-center\">\r\n            <div id=\"vis\" style={{ height: window.innerHeight }}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\r\nimport VerticalNav from \"./components/VerticalNav\";\r\nimport Home from \"./components/Home\";\r\nimport Animal from \"./components/Animal\";\r\nimport CO2 from \"./components/CO2\";\r\nimport Introduction from \"./components/Introduction\";\r\nimport Stock from \"./components/Stock\";\r\nimport ToiletPaper from \"./components/ToiletPaper\";\r\nimport Traffic from \"./components/Traffic\";\r\nimport Reflection from \"./components/Reflection\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <VerticalNav />\r\n      <Home />\r\n      <Introduction />\r\n      <ToiletPaper />\r\n      <Stock />\r\n      <Animal />\r\n      <CO2 />\r\n      <Reflection />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}